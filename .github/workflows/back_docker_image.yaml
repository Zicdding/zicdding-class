name: back_build_dockerfile
on:
  push:
    branches:
      - main
    paths:
      - .github/**
      - backend/**

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      TAG: ${{ steps.extract_tag.outputs.TAG }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          sparse-checkout: |
            backend

      - name: Extract tag from commit message
        id: extract_tag
        run: |
          TAG=$(cat backend/VERSION)
          if [[ -z "$TAG" ]]; then
            echo "VERSION file is empty or not found"
            exit 1
          fi
          echo "TAG=${TAG}" >> $GITHUB_ENV
          echo "TAG=${TAG}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: backend
          file: backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/zicdding:${{ env.TAG }}
          build-args: |
            DB_DATABASE=${{ secrets.DB_DATABASE }}
            DB_PORT=${{ secrets.DB_PORT }}
            DB_HOST=${{ secrets.DB_HOST }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            SECRET_KEY=${{ secrets.SECRET_KEY }}
            JWT_ALGO=${{ secrets.JWT_ALGO }}
            JWT_EXP=${{ secrets.JWT_EXP }}
            JWT_ISSUER=${{ secrets.JWT_ISSUER }}
            JWT_REFRESH_EXP=${{ secrets.JWT_REFRESH_EXP }}
            CLIENT_ID=${{ secrets.CLIENT_ID }}
            CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}
            REDIRECT_URI=${{ secrets.REDIRECT_URI }}

  push:
    name: Push Manifest
    needs: build
    runs-on: ubuntu-latest
    env:
      TAG: ${{ needs.build.outputs.TAG }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_TOKEN }}
          ref: main

      - name: Debug TAG
        run: echo "TAG=${{ env.TAG }}"

      - name: Change manifest
        run: sed -i "s|suhyeonsong/zicdding:[^ ]*|suhyeonsong/zicdding:${{ env.TAG }}|" ./backend/backend_argocd/back_deployment.yaml

      - name: Commit image version
        run: |
          git config user.name "suhyeonXYZ"
          git config user.email "${{ secrets.EMAIL }}"
          git add ./backend/backend_argocd/back_deployment.yaml
          git commit -m ":tada: Update: Image [ ${{ env.TAG }} ] "

      - name: Push image version
        run: git push origin main

